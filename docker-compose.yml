services:
  db:
    image: postgres:15.0
    restart: always
    environment:
      POSTGRES_DB: taskmanager_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
      - kafka
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/taskmanager_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect

      SPRING_DATA_REDIS_HOST: redis 
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_CACHE_TYPE: redis

      

  redis:
    image: redis:7-alpine 
    container_name: taskmanager_redis
    ports: 
      - "6379:6379" 
    volumes:
      - redis_data:/data 
    healthcheck: 
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      # PLAINTEXT://kafka:29092 - для коммуникации внутри Docker-сети (имя сервиса 'kafka', порт 29092)
      # PLAINTEXT_HOST://localhost:9092 - для коммуникации с хост-машины (если проброшен порт 9092)
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1 # Для одного брокера
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

volumes:
  pgdata:
  redis_data: